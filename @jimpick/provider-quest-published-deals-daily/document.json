{
  "id": "a558fb3444ef7dac",
  "slug": "provider-quest-published-deals-daily",
  "trashed": false,
  "description": "",
  "likes": 0,
  "publish_level": "live",
  "forks": 2,
  "fork_of": null,
  "has_importers": false,
  "update_time": "2023-01-05T16:05:10.570Z",
  "first_public_version": 429,
  "paused_version": null,
  "publish_time": "2021-07-01T17:49:08.572Z",
  "publish_version": 430,
  "latest_version": 430,
  "thumbnail": "f1387d0407cda9d9b674613bd4244dec941b2fdab556f0f09c76ce98aa2b42b4",
  "default_thumbnail": "f1387d0407cda9d9b674613bd4244dec941b2fdab556f0f09c76ce98aa2b42b4",
  "roles": [],
  "sharing": null,
  "tags": [],
  "owner": {
    "id": "bda4505ba9a55ac8",
    "github_login": "jimpick",
    "avatar_url": "https://avatars.observableusercontent.com/avatar/e8813527082139d5411445010e72fd85f99b04a26355e795d0ea26765425d0cd",
    "login": "jimpick",
    "name": "Jim Pick",
    "bio": "Freelance Filecoin developer in Victoria, Canada",
    "home_url": "https://github.com/jimpick",
    "type": "individual",
    "tier": "public",
    "following_count": 0,
    "followers_count": 1,
    "following": false
  },
  "creator": {
    "id": "bda4505ba9a55ac8",
    "github_login": "jimpick",
    "avatar_url": "https://avatars.observableusercontent.com/avatar/e8813527082139d5411445010e72fd85f99b04a26355e795d0ea26765425d0cd",
    "login": "jimpick",
    "name": "Jim Pick",
    "bio": "Freelance Filecoin developer in Victoria, Canada",
    "home_url": "https://github.com/jimpick",
    "tier": "public",
    "following_count": 0,
    "followers_count": 1,
    "following": false
  },
  "authors": [
    {
      "id": "bda4505ba9a55ac8",
      "avatar_url": "https://avatars.observableusercontent.com/avatar/e8813527082139d5411445010e72fd85f99b04a26355e795d0ea26765425d0cd",
      "name": "Jim Pick",
      "login": "jimpick",
      "bio": "Freelance Filecoin developer in Victoria, Canada",
      "home_url": "https://github.com/jimpick",
      "github_login": "jimpick",
      "tier": "public",
      "approved": true,
      "description": "",
      "following_count": 0,
      "followers_count": 1,
      "following": false
    }
  ],
  "collections": [
    {
      "id": "242749e359cb986b",
      "type": "public",
      "slug": "provider-quest",
      "title": "Provider.Quest",
      "description": "Analytics and visualizations for the Filecoin network",
      "update_time": "2021-09-27T20:45:27.747Z",
      "pinned": false,
      "ordered": true,
      "custom_thumbnail": null,
      "default_thumbnail": "7f360024b03a87e10493b101b9df4cf7af2a618c7935c0e9c0e91c54a54c4c24",
      "thumbnail": "7f360024b03a87e10493b101b9df4cf7af2a618c7935c0e9c0e91c54a54c4c24",
      "listing_count": 31,
      "parent_collection_count": 1,
      "owner": {
        "id": "bda4505ba9a55ac8",
        "github_login": "jimpick",
        "avatar_url": "https://avatars.observableusercontent.com/avatar/e8813527082139d5411445010e72fd85f99b04a26355e795d0ea26765425d0cd",
        "login": "jimpick",
        "name": "Jim Pick",
        "bio": "Freelance Filecoin developer in Victoria, Canada",
        "home_url": "https://github.com/jimpick",
        "type": "individual",
        "tier": "public",
        "following_count": 0,
        "followers_count": 1,
        "following": false
      }
    }
  ],
  "files": [],
  "comments": [],
  "commenting_lock": null,
  "suggestion_from": null,
  "suggestions_to": [],
  "version": 430,
  "title": "Published Deals: Daily [Provider.Quest]",
  "license": "apache-2.0",
  "copyright": "Copyright 2021 Jim Pick",
  "nodes": [
    {
      "id": 0,
      "value": "# Published Deals: Daily [Provider.Quest]",
      "pinned": false,
      "mode": "md",
      "data": null,
      "name": ""
    },
    {
      "id": 345,
      "value": "md`${quickMenu}`",
      "pinned": false,
      "mode": "js",
      "data": null,
      "name": null
    },
    {
      "id": 64,
      "value": "md`Notes:\n\n* Numbers are based on published deal proposals encoded in messages on the Filecoin blockchain.\n* The [scanning script](https://observablehq.com/@jimpick/provider-quest-publish-deal-messages-stream?collection=@jimpick/provider-quest) is usually run multiple times per hour, but there may be gaps in the data from time to time. This system is optimized for timeliness instead of accuracy.\n* Dates are based on when a message was published on the blockchain, not when the deal proposal was sent to a provider, or when the deal proving interval starts or when the sector is created.\n* Not all published deals are successfully committed to sectors by providers, and occasionally providers lose data and get slashed, so these numbers will be greater than the actual amount of data stored to Filecoin. Check the [Starboard Deals](https://dashboard.starboard.ventures/market-deals) dashboard for information on \"committed\" deals.\n* Distinct counts are calculated continuously with Spark Structured Streaming using an approximation algorithm.\n* A similar report is available for [Weekly Deals](https://observablehq.com/@jimpick/provider-quest-published-deals-weekly?collection=@jimpick/provider-quest), [Hourly Deals](https://observablehq.com/@jimpick/provider-quest-published-deals-hourly?collection=@jimpick/provider-quest) and [Hourly Deals: Named Clients](https://observablehq.com/@jimpick/provider-quest-deals-named-clients-hourly?collection=@jimpick/provider-quest).\n`",
      "pinned": false,
      "mode": "js",
      "data": null,
      "name": null
    },
    {
      "id": 25,
      "value": "md`## Published Deals Per Day`",
      "pinned": false,
      "mode": "js",
      "data": null,
      "name": null
    },
    {
      "id": 6,
      "value": "Plot.plot({\n  y: {\n    grid: true\n  },\n  marginLeft: 60,\n  marks: [\n    Plot.rectY(dailyDeals, {\n      x: { value: \"date\", interval: d3.utcDay },\n      y: \"count\",\n      fill: \"#bab0ab\"\n    }),\n    Plot.ruleY([0])\n  ]\n})",
      "pinned": false,
      "mode": "js",
      "data": null,
      "name": null
    },
    {
      "id": 33,
      "value": "md`## Total Data Size of Published Deals Per Day (TiB)`",
      "pinned": false,
      "mode": "js",
      "data": null,
      "name": null
    },
    {
      "id": 41,
      "value": "Plot.plot({\n  y: {\n    grid: true\n  },\n  marks: [\n    Plot.rectY(dailyDeals, {\n      x: { value: \"date\", interval: d3.utcDay },\n      y: \"sumPieceSizeTiB\",\n      fill: \"#bab0ab\"\n    }),\n    Plot.ruleY([0])\n  ]\n})",
      "pinned": false,
      "mode": "js",
      "data": null,
      "name": null
    },
    {
      "id": 50,
      "value": "md`## Lifetime Value of Published Deals Per Day (FIL)`",
      "pinned": false,
      "mode": "js",
      "data": null,
      "name": null
    },
    {
      "id": 55,
      "value": "Plot.plot({\n  y: {\n    grid: true\n  },\n  marks: [\n    Plot.rectY(dailyDeals, {\n      x: { value: \"date\", interval: d3.utcDay },\n      y: \"sum(lifetimeValue)\",\n      fill: \"#bab0ab\"\n    }),\n    Plot.ruleY([0])\n  ]\n})",
      "pinned": false,
      "mode": "js",
      "data": null,
      "name": null
    },
    {
      "id": 67,
      "value": "md`## Number of Providers that Accepted Deals`",
      "pinned": false,
      "mode": "js",
      "data": null,
      "name": null
    },
    {
      "id": 70,
      "value": "Plot.plot({\n  y: {\n    grid: true\n  },\n  marks: [\n    Plot.rectY(dailyDeals, {\n      x: { value: \"date\", interval: d3.utcDay },\n      y: \"approx_count_distinct(provider)\",\n      fill: \"#bab0ab\"\n    }),\n    Plot.ruleY([0])\n  ]\n})",
      "pinned": false,
      "mode": "js",
      "data": null,
      "name": null
    },
    {
      "id": 72,
      "value": "md`## Number of Clients that Placed Deals`",
      "pinned": false,
      "mode": "js",
      "data": null,
      "name": null
    },
    {
      "id": 75,
      "value": "Plot.plot({\n  y: {\n    grid: true\n  },\n  marks: [\n    Plot.rectY(dailyDeals, {\n      x: { value: \"date\", interval: d3.utcDay },\n      y: \"approx_count_distinct(client)\",\n      fill: \"#bab0ab\"\n    }),\n    Plot.ruleY([0])\n  ]\n})",
      "pinned": false,
      "mode": "js",
      "data": null,
      "name": null
    },
    {
      "id": 79,
      "value": "md`## Number of Client <-> Provider Pairs`",
      "pinned": false,
      "mode": "js",
      "data": null,
      "name": null
    },
    {
      "id": 81,
      "value": "Plot.plot({\n  y: {\n    grid: true\n  },\n  marks: [\n    Plot.rectY(dailyDeals, {\n      x: { value: \"date\", interval: d3.utcDay },\n      y: \"approx_count_distinct(clientProvider)\",\n      fill: \"#bab0ab\"\n    }),\n    Plot.ruleY([0])\n  ]\n})",
      "pinned": false,
      "mode": "js",
      "data": null,
      "name": null
    },
    {
      "id": 324,
      "value": "md`## Distinct CIDs (Content Identifiers)`",
      "pinned": false,
      "mode": "js",
      "data": null,
      "name": null
    },
    {
      "id": 326,
      "value": "Plot.plot({\n  y: {\n    grid: true\n  },\n  marginLeft: 60,\n  marks: [\n    Plot.rectY(dailyDeals, {\n      x: { value: \"date\", interval: d3.utcDay },\n      y: \"approx_count_distinct(label)\",\n      fill: \"#bab0ab\"\n    }),\n    Plot.ruleY([0])\n  ]\n})",
      "pinned": false,
      "mode": "js",
      "data": null,
      "name": null
    },
    {
      "id": 201,
      "value": "md `## Unverified/Verified: Deals Per Day`",
      "pinned": false,
      "mode": "js",
      "data": null,
      "name": null
    },
    {
      "id": 312,
      "value": "Plot.plot({\n  marks: [\n    Plot.cell(['Unverified', 'Verified'], {x: d => d, fill: d => d})\n  ]\n})",
      "pinned": false,
      "mode": "js",
      "data": null,
      "name": null
    },
    {
      "id": 205,
      "value": "Plot.plot({\n  y: {\n    grid: true\n  },\n  marginLeft: 60,\n  marks: [\n    Plot.rectY(dailyDealsByVerified, {\n      x: { value: \"date\", interval: d3.utcDay },\n      y: \"count\",\n      fill: d => `${d.verifiedDeal}`\n    }),\n    Plot.ruleY([0])\n  ]\n})",
      "pinned": false,
      "mode": "js",
      "data": null,
      "name": null
    },
    {
      "id": 252,
      "value": "md`## Unverified/Verified: Total Data Size (TiB)`",
      "pinned": false,
      "mode": "js",
      "data": null,
      "name": null
    },
    {
      "id": 314,
      "value": "Plot.plot({\n  marks: [\n    Plot.cell(['Unverified', 'Verified'], {x: d => d, fill: d => d})\n  ]\n})",
      "pinned": false,
      "mode": "js",
      "data": null,
      "name": null
    },
    {
      "id": 250,
      "value": "Plot.plot({\n  y: {\n    grid: true,\n    label: `↑ TiB`\n  },\n  marks: [\n    Plot.rectY(dailyDealsByVerified, {\n      x: { value: \"date\", interval: d3.utcDay },\n      y: \"sumPieceSizeTiB\",\n      fill: d => `${d.verifiedDeal}`\n    }),\n    Plot.ruleY([0])\n  ]\n})",
      "pinned": false,
      "mode": "js",
      "data": null,
      "name": null
    },
    {
      "id": 265,
      "value": "md`## Data`",
      "pinned": false,
      "mode": "js",
      "data": null,
      "name": null
    },
    {
      "id": 94,
      "value": "import { dealsBucketUrl } from '@jimpick/provider-quest-feeds'",
      "pinned": false,
      "mode": "js",
      "data": null,
      "name": null
    },
    {
      "id": 4,
      "value": "dailyDealsRaw = (await fetch(`${dealsBucketUrl}/daily-totals.json`)).json()",
      "pinned": false,
      "mode": "js",
      "data": null,
      "name": null
    },
    {
      "id": 20,
      "value": "dailyDeals = dailyDealsRaw.slice(-9).map(record => ({\n  date: d3.isoParse(record.window.start),\n  sumPieceSizeKiB: record['sum(pieceSizeDouble)'] / 1024,\n  sumPieceSizeMiB: record['sum(pieceSizeDouble)'] / 1024 ** 2,\n  sumPieceSizeGiB: record['sum(pieceSizeDouble)'] / 1024 ** 3,\n  sumPieceSizeTiB: record['sum(pieceSizeDouble)'] / 1024 ** 4,\n  ...record\n}))",
      "pinned": false,
      "mode": "js",
      "data": null,
      "name": null
    },
    {
      "id": 263,
      "value": "Inputs.table(dailyDeals.map(({window, ...rest}) => rest))",
      "pinned": false,
      "mode": "js",
      "data": null,
      "name": null
    },
    {
      "id": 97,
      "value": "dailyDealsByVerifiedRaw = (await fetch(`${dealsBucketUrl}/daily-totals-verified.json`)).json()",
      "pinned": false,
      "mode": "js",
      "data": null,
      "name": null
    },
    {
      "id": 102,
      "value": "dailyDealsByVerified = dailyDealsByVerifiedRaw.map(record => ({\n  date: d3.isoParse(record.window.start),\n  sumPieceSizeKiB: record['sum(pieceSizeDouble)'] / 1024,\n  sumPieceSizeMiB: record['sum(pieceSizeDouble)'] / 1024 ** 2,\n  sumPieceSizeGiB: record['sum(pieceSizeDouble)'] / 1024 ** 3,\n  sumPieceSizeTiB: record['sum(pieceSizeDouble)'] / 1024 ** 4,\n  ...record\n})).sort((a, b) => {\n  const comp1 = a.date - b.date\n  if (comp1 !== 0) return comp1\n  return Number(a.verifiedDeal) - Number(b.verifiedDeal)\n}).slice(-18)",
      "pinned": false,
      "mode": "js",
      "data": null,
      "name": null
    },
    {
      "id": 272,
      "value": "Inputs.table(dailyDealsByVerified.map(({window, ...rest}) => rest))",
      "pinned": false,
      "mode": "js",
      "data": null,
      "name": null
    },
    {
      "id": 10,
      "value": "md`## Imports`",
      "pinned": false,
      "mode": "js",
      "data": null,
      "name": null
    },
    {
      "id": 9,
      "value": "d3 = require(\"d3@6\")",
      "pinned": false,
      "mode": "js",
      "data": null,
      "name": null
    },
    {
      "id": 342,
      "value": "import {quickMenu} from '@jimpick/provider-quest-utils'",
      "pinned": false,
      "mode": "js",
      "data": null,
      "name": null
    },
    {
      "id": 405,
      "value": "## Backups",
      "pinned": false,
      "mode": "md",
      "data": null,
      "name": ""
    },
    {
      "id": 409,
      "value": "import {backups, backupNowButton} from '@jimpick/provider-quest-utils'",
      "pinned": false,
      "mode": "js",
      "data": null,
      "name": null
    },
    {
      "id": 412,
      "value": "backups()",
      "pinned": false,
      "mode": "js",
      "data": null,
      "name": null
    }
  ],
  "resolutions": []
}
